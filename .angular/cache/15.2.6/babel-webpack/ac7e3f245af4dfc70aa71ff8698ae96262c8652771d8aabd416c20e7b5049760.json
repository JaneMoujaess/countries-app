{"ast":null,"code":"import { CountryMapper } from './mappers/country.mapper';\nimport { highlightRegion } from './state/country.actions';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/countries.service\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"@angular/common\";\nexport class AppComponent {\n  constructor(countriesService, store) {\n    this.countriesService = countriesService;\n    this.store = store;\n    this.title = 'countries-app';\n    this.regions = ['Europe', 'Asia'];\n    this.countries = [];\n    this.highlightedRegion$ = of(null);\n    // this.highlightedRegion$ = store.select('highlightedRegion');\n  }\n\n  ngOnInit() {\n    this.countriesService.fetchAllCountries().subscribe(res => {\n      this.countries = CountryMapper.fromCountryDtoToCountry(res);\n    });\n    // this.highlightedRegion$.subscribe((value) => console.log(value));\n    this.highlightedRegion$ = this.store.select('highlightedRegion');\n  }\n  onHover(region) {\n    this.store.dispatch(highlightRegion({\n      region\n    }));\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.CountriesService), i0.ɵɵdirectiveInject(i2.Store));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 5,\n  vars: 3,\n  consts: [[3, \"mousenter\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"mousenter\", function AppComponent_Template_button_mousenter_0_listener() {\n        return ctx.onHover(\"Europe\");\n      });\n      i0.ɵɵtext(1, \"Click\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\");\n      i0.ɵɵtext(3);\n      i0.ɵɵpipe(4, \"async\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"Highlighted Region: \", i0.ɵɵpipeBind1(4, 1, ctx.highlightedRegion$), \"\");\n    }\n  },\n  dependencies: [i3.AsyncPipe],\n  styles: [\".page-layout[_ngcontent-%COMP%] {\\n  background-color: #e2e4f1;\\n  padding: 25px;\\n  display: flex;\\n  flex-direction: column;\\n  height: 100vh;\\n  row-gap: 25px;\\n}\\n\\n.cards-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  column-gap: 5px;\\n  row-gap: 5px;\\n  flex: auto;\\n  overflow-y: auto;\\n}\\n.cards-container[_ngcontent-%COMP%]   .mat-card[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex: auto;\\n  background-color: #ffffff;\\n  color: #000000;\\n}\\n.cards-container[_ngcontent-%COMP%]   .mat-card[_ngcontent-%COMP%]   .mat-card-content[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  column-gap: 10px;\\n  align-items: center;\\n}\\n.cards-container[_ngcontent-%COMP%]   .mat-card[_ngcontent-%COMP%]   .mat-card-content[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  height: 25px;\\n}\\n\\n.regions-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  column-gap: 20px;\\n}\\n.regions-container[_ngcontent-%COMP%]   .region-card[_ngcontent-%COMP%] {\\n  height: 300px;\\n  flex: auto;\\n  background-color: #ffffff;\\n}\\n.regions-container[_ngcontent-%COMP%]   .region-card[_ngcontent-%COMP%]   .region-title[_ngcontent-%COMP%] {\\n  color: #000000;\\n  text-align: center;\\n  font-size: 30px;\\n}\\n\\n.highlighted[_ngcontent-%COMP%] {\\n  background-color: yellow;\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQUE7RUFDQSxhQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsYUFBQTtFQUNBLGFBQUE7QUFDRjs7QUFDQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLGVBQUE7RUFDQSxlQUFBO0VBQ0EsWUFBQTtFQUNBLFVBQUE7RUFDQSxnQkFBQTtBQUVGO0FBREU7RUFDRSxhQUFBO0VBQ0EsVUFBQTtFQUNBLHlCQUFBO0VBQ0EsY0FBQTtBQUdKO0FBRkk7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQkFBQTtFQUNBLG1CQUFBO0FBSU47QUFITTtFQUNFLFlBQUE7QUFLUjs7QUFBQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLGdCQUFBO0FBR0Y7QUFGRTtFQUNFLGFBQUE7RUFDQSxVQUFBO0VBQ0EseUJBQUE7QUFJSjtBQUhJO0VBQ0UsY0FBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtBQUtOOztBQUFBO0VBQ0Usd0JBQUE7RUFDQSxVQUFBO0FBR0YiLCJzb3VyY2VzQ29udGVudCI6WyIucGFnZS1sYXlvdXQge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNlMmU0ZjE7XHJcbiAgcGFkZGluZzogMjVweDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgaGVpZ2h0OiAxMDB2aDtcclxuICByb3ctZ2FwOiAyNXB4O1xyXG59XHJcbi5jYXJkcy1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgY29sdW1uLWdhcDogNXB4O1xyXG4gIHJvdy1nYXA6IDVweDtcclxuICBmbGV4OiBhdXRvO1xyXG4gIG92ZXJmbG93LXk6IGF1dG87XHJcbiAgLm1hdC1jYXJkIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4OiBhdXRvO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcclxuICAgIGNvbG9yOiAjMDAwMDAwO1xyXG4gICAgLm1hdC1jYXJkLWNvbnRlbnQge1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICBjb2x1bW4tZ2FwOiAxMHB4O1xyXG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICBpbWcge1xyXG4gICAgICAgIGhlaWdodDogMjVweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG4ucmVnaW9ucy1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICBjb2x1bW4tZ2FwOiAyMHB4O1xyXG4gIC5yZWdpb24tY2FyZCB7XHJcbiAgICBoZWlnaHQ6IDMwMHB4O1xyXG4gICAgZmxleDogYXV0bztcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XHJcbiAgICAucmVnaW9uLXRpdGxlIHtcclxuICAgICAgY29sb3I6ICMwMDAwMDA7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgZm9udC1zaXplOiAzMHB4O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLmhpZ2hsaWdodGVkIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB5ZWxsb3c7XHJcbiAgY29sb3I6IHJlZDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,aAAa,QAAQ,0BAA0B;AAIxD,SAASC,eAAe,QAAQ,yBAAyB;AACzD,SAAqBC,EAAE,QAAQ,MAAM;;;;;AAWrC,OAAM,MAAOC,YAAY;EAMvBC,YACUC,gBAAkC,EAClCC,KAAsB;IADtB,qBAAgB,GAAhBD,gBAAgB;IAChB,UAAK,GAALC,KAAK;IAPf,UAAK,GAAG,eAAe;IACvB,YAAO,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC;IAC5B,cAAS,GAAmB,EAAE;IAC9B,uBAAkB,GAA8BJ,EAAE,CAAC,IAAI,CAAC;IAMtD;EACF;;EAEAK,QAAQ;IACN,IAAI,CAACF,gBAAgB,CAACG,iBAAiB,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAI;MAC1D,IAAI,CAACC,SAAS,GAAGX,aAAa,CAACY,uBAAuB,CAACF,GAAG,CAAC;IAC7D,CAAC,CAAC;IACF;IACA,IAAI,CAACG,kBAAkB,GAAG,IAAI,CAACP,KAAK,CAACQ,MAAM,CAAC,mBAAmB,CAAC;EAClE;EAEAC,OAAO,CAACC,MAAc;IACpB,IAAI,CAACV,KAAK,CAACW,QAAQ,CAAChB,eAAe,CAAC;MAAEe;IAAM,CAAE,CAAC,CAAC;EAClD;;;mBAvBWb,YAAY;AAAA;;QAAZA,YAAY;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MANrBC,iCAAwC;MAAhCA;QAAA,OAAaC,YAAQ,QAAQ,CAAC;MAAA,EAAC;MAACD,qBAAK;MAAAA,iBAAS;MACtDA,2BAAK;MAAAA,YAAoD;;MAAAA,iBAAM;;;MAA1DA,eAAoD;MAApDA,+FAAoD","names":["CountryMapper","highlightRegion","of","AppComponent","constructor","countriesService","store","ngOnInit","fetchAllCountries","subscribe","res","countries","fromCountryDtoToCountry","highlightedRegion$","select","onHover","region","dispatch","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\USER\\Desktop\\Jane\\inmind\\Front-end\\countries-app\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CountriesService } from './services/countries.service';\r\nimport { CountryMapper } from './mappers/country.mapper';\r\nimport { Country } from './models/country.model';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from './state/AppState';\r\nimport { highlightRegion } from './state/country.actions';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `\r\n    <button (mousenter)=\"onHover('Europe')\">Click</button>\r\n    <div>Highlighted Region: {{ highlightedRegion$ | async }}</div>\r\n  `,\r\n  // templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'countries-app';\r\n  regions = ['Europe', 'Asia'];\r\n  countries: Array<Country> = [];\r\n  highlightedRegion$: Observable<string | null> = of(null);\r\n\r\n  constructor(\r\n    private countriesService: CountriesService,\r\n    private store: Store<AppState>\r\n  ) {\r\n    // this.highlightedRegion$ = store.select('highlightedRegion');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.countriesService.fetchAllCountries().subscribe((res) => {\r\n      this.countries = CountryMapper.fromCountryDtoToCountry(res);\r\n    });\r\n    // this.highlightedRegion$.subscribe((value) => console.log(value));\r\n    this.highlightedRegion$ = this.store.select('highlightedRegion');\r\n  }\r\n\r\n  onHover(region: string) {\r\n    this.store.dispatch(highlightRegion({ region }));\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}